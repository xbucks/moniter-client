[package]
name = "monitor"
version = "0.1.0"
authors = ["Hiroki Moto <hiroki.moto.pro@gmail.com>"]
edition = "2018"
description = "Tray Icon, that thing in the corner"
license = "MIT"
readme = "README.md"
homepage = "https://github.com/hirokimoto/monitor"
repository = "https://github.com/hirokimoto/monitor"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["winuser", "windef", "minwindef", "shellapi", "libloaderapi", "basetsd"] }

[dependencies]
winit = { version = "0.25", optional = true }
crossbeam-channel = { version = "0.5", optional = true }
serde = {version = "1.0", features = ["derive"], optional=true}
lazy_static = "1.4"
anyhow = "1.0"
display-info = "0.4"
image = "0.24"
percent-encoding = "2.3"

[lib]
name = "monitor"
path = "src/lib.rs"

[package.metadata.docs.rs]
default-target = "x86_64-pc-windows-msvc"
all-features = true

[workspace]
members = [
    "examples/winit",
    "examples/winapi",
    "examples/crossbeam",
]

[features]
default = []
serialize = ["serde"]
unstable_grab = ["evdev-rs", "epoll", "inotify"]

[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.22"
core-graphics = "0.22"
core-foundation = {version = "0.7"}
core-foundation-sys = {version = "0.7"}

[target.'cfg(target_os = "linux")'.dependencies]
libc = "0.2"
x11 = {version = "2.18", features = ["xlib", "xrecord", "xinput"]}
evdev-rs = {version = "0.4.0", optional=true}
epoll = {version = "4.1.0", optional=true}
inotify = {version = "0.8.2", default-features=false, optional=true}
dbus = { version = "0.9", features = ["vendored"] }
libwayshot = "0.2"
xcb = "1.2"

[target.'cfg(target_os = "windows")'.dependencies]
winapi = { version = "0.3", features = ["winuser", "errhandlingapi", "processthreadsapi"] }
fxhash = "0.2"
widestring = "1.0"
windows = { version = "0.48", features = [
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
] }

[dev-dependencies]
serde_json = "1.0"
# Some tests interact with the real OS. We can't hit the OS in parallel
# because that leads to unexpected behavior and flaky tests, so we need
# to run thoses tests in sequence instead.
serial_test = "0.4"
tokio = {version = "1.5", features=["sync", "macros", "rt-multi-thread"]}

[[example]]
name = "serialize"
required-features = ["serialize"]

[[example]]
name = "grab"
required-features = ["unstable_grab"]

[[example]]
name = "tokio_channel"
required-features = ["unstable_grab"]

[[test]]
name = "grab"
path = "tests/grab.rs"
required-features = ["unstable_grab"]